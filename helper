------------------------hotels insert------------------
import psycopg2, json

conn = psycopg2.connect("dbname=InfiniteVenues user=postgres password=password")
cur = conn.cursor()
with open('hotels', 'r') as f:
    x = f.read()
    x = json.loads(x)
    s = 'insert into hotels values'
    for i in x:
        flag = 0
        print(i)
        for j in x[i]:
            if x[i][j] == '\n':
                flag = 1
                break
        if flag == 1:
            continue
        a = s+f"({int(i)},'{x[i]['HotelName']}', '{x[i]['Address']}', '{x[i]['City']}', '{x[i]['State']}', {x[i]['MobileNumber']}, {x[i]['PhoneNumber']}, '{x[i]['Email']}', '{x[i]['Category']}', '{x[i]['SubCategory']}', {x[i]['TotalRooms']})"
        cur.execute(a)
conn.commit()

--------h_and_r insert----------
import psycopg2, random

conn = psycopg2.connect("dbname=InfiniteVenues user=postgres password=password")
cur = conn.cursor()

a = list(range(8))
cur.execute('select hid from hotels')
x = cur.fetchall()
x = [i[0] for i in x]
# print(x)
for i in x:
    cur.execute(f'insert into h_and_r values({i}, {random.randint(1, 4)}, {random.randint(1, 40)})')
    cur.execute(f'insert into h_and_r values({i}, {random.randint(5, 8)}, {random.randint(1, 30)})')
conn.commit()

Database creation--------------------------

CREATE table users (
    user_id serial primary key,
	fname varchar(1000),
	lname varchar(1000),
    email_id   VARCHAR(1000),
    username   VARCHAR(1000) NOT NULL unique,
    password   VARCHAR(1000) NOT NULL,
    contact_no numeric(10,0)
);

create table hotels(
	hid serial primary key,
	h_name varchar(300),
	address varchar(300),
	city varchar(300),
	h_state varchar(200),
	mobile numeric(15),
	phoneno numeric(15), 
	email varchar(100),
	category varchar(30),
	subcat varchar(30),
	rooms integer
);

create table rooms(
	rid serial primary key,
	rtype varchar(30),
	price integer
);
insert into rooms 
values(1, 'single', 1, 1000), (2, 'double', 2, 1800), (3, 'quad', 4, 3200), (4, 'suite', 4, 5000), (5, 'luxury suite', 4, 7000), (6, 'queen', 3, 3750), (7, 'king', 3, 4000), (8, 'deluxe', 8, 10000)

create table h_and_r(
	hid integer references hotels(hid),
	rid integer references rooms(rid),
	number_rooms integer
)
